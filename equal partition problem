/*
 Mother Problem : 0-1 Knapsack -> Subset Sum Problem ->
 
  Problem Statement : Equal Partition Problem 

  Given an array you have to tell wether i can divide the array into two subarray having sum eqaul i.e left_sub_array_sum = right_sub_array_sum .

  Exaplanation Link : https://www.youtube.com/watch?v=UmMh7xp07kY list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go&index=8

  Input 1 : 
    N = 3
    [1, 2, 4]
  
  Output :
    No

  Input 2:
    N = 4
    [1, 5, 11, 5]

  Output :
    Yes    // becausse left subarray = [1,5,5], Right subarray = [11];

  Explanation :
    Given that you need to find the two sub array having sum equal...let assume that there are such two subsets whoes sum becomes equal that means leftsum==rightsum

    Than leftsum + rightsum == totalsumofarray

    Now total sum to be divisible into 2 equal parts it must be even, than only you can make it half right ?, that is the reason we first get the sum of whole array and than check if it is even if yes than go for futher proccessing else simply say NO.

    Now if the total is even than we don't need to find both the subsets, we just need to find one subset whoes sum will be equal to Total/2 right ?... and this is how this problem becomes similar to subset sum problem where you need to find a subset whoes sum should same as the given sum
*/

#include<bits/stdc++.h>
using namespace std;

int equalpart(vector<int> &v,int sum,int curr)
{
  if(sum==0)
  {
    return 1;
  }
  if(curr==0)
  {
    return 0;
  }
  if(v[curr]>sum)
  {
    return equalpart(v,sum,curr-1); // Not including the element having value greater than sum .
  }
  
  // there are 2 possibilities whether to include the element into the subset or not.
  return equalpart(v,sum-v[curr],curr-1) || equalpart(v,sum,curr-1);
}

int main()
{
  int n;
  cin>>n;
  vector<int> v(n+1);
  int sum=0;
  for(int i=1;i<=n;i++)
  {
    cin>>v[i];
    sum+=v[i];
  }
  // check if sum is even or not
  if(sum%2!=0) 
  {
    cout<<"N0\n";
  }
  else
  {
    if(equalpart(v,sum/2,n)){
      cout<<"Yes\n";
    }
    else
    {
      cout<<"No\n";
    }
  }
  return 0;
}
